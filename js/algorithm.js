/*
lintcode codevs hackerrank codeabbey projecteuler

快速排序算法
堆排序算法
归并排序算法
二分查找算法
线性查找算法 bfprt
深度优先搜索算法 dfs
广度优先搜索算法 bfs
dijkstra算法
动态规划算法
朴素贝叶斯分类算法

对未来的一些探索

人工智能

1、机器学习

2、深度学习

3、图像算法

4、算法研究员

5、图像处理

6、图像识别

7、语音识别

机器学习是什么？machine learning 算法训练模型
已有的数据
某种模型
利用此模型预测未来
机器学习届数据为王思想

算法调优调参，模型预测未来越准确
机器学习：模式识别、数据挖掘、统计学习、自然语言处理、语音识别、计算机视觉
模式识别=机器学习
数据挖掘=机器学习+数据库
统计学习近似等于机器学习
计算机视觉=图像处理+机器学习
语音识别=语音处理+机器学习
自然语言处理=文本处理+机器学习

人工智能是机器学习的父类 ---> 机器学习是深度学习的父类 ---> 深度学习
人工智能 -> 机器学习 -> 深度学习
AI ML DL
AI artificial intelligence
ML Machine Learning
DL deep learning
NLP Natural Language Processing
SR Speech Recognition
ASR Automatic Speech Recognition

深度学习框架：https://baijiahao.baidu.com/s?id=1599943447101946075&wfr=spider&for=pc

google now
iphone siri
macrosoft cortana

有监督机器学习流程：历史数据 --> 算法(公式)选择(分类算法||回归算法) --> 模型训练 --> 得到最优解 --> 模型 --> 新数据 --> 预测结果
数据分为训练数据集和测试数据集
data：train set &&  test set

有监督机器学习训练流程：

机器学习库Scikit-Learn
NumPy系统是Python的一种开源的数值计算扩展。这种工具可用来存储和处理大型矩阵，比Python自身的嵌套列表（nested list structure)结构要高效的多（该结构也可以用来表示矩阵（matrix））。
pandas 是基于NumPy 的一种工具，该工具是为了解决数据分析任务而创建的。Pandas 纳入了大量库和一些标准的数据模型，提供了高效地操作大型数据集所需的工具。pandas提供了大量能使我们快速便捷地处理数据的函数和方法。你很快就会发现，它是使Python成为强大而高效的数据分析环境的重要因素之一。
Scikit-Learn基于NumPy封装的一些算法，让工程师使用算法更加简单，不在需要NumPy构建算法实现公式

机器学习工程师需要做的事情：
有监督
Classification 分类
Regression 回归
无监督
Clustering 聚类
Dimensionality reduction 降维
Model selection 模型选择
Preprocessing 预处理

回归
线性回归
线性：两个变量之间存在一次方函数关系

机器学习：让机器像人具备学习的能力
算法是公式，把数据代到算法里面是模型，模型就是参数
预测：把新的数据和参数进行计算得到结果

*/

/*
重点研究无人驾驶和导航
Python全栈开发 人工智能
https://ke.qq.com/course/348490?tuin=369cc19

常用的数据结构有：数组，队列（queue），堆（heap）,栈（stack），链表（linked list ），树（tree），图（graph）和散列表（hash）
四大结构-集合结构 线性结构 树形结构 图形结构
算法,解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。
算法具有五个基本特征：输入、输出、有穷性、确定性和可行性。

时间复杂度究 logn=log2(n) lgn=log10(n)
O（1）< O（logn）< O（n）< O（n^2）
O（nlogn）, O（n^3）, O（m*n），O（2^n），O（n！）


排序算法的思想：

(1)冒泡排序：

是相邻元素之间的比较和交换，两重循环O(n2)；所以，如果两个相邻元素相等，是不会交换的。所以它是一种稳定的排序方法

(2)选择排序：

每个元素都与第一个元素相比，产生交换，两重循环O(n2)；举个栗子，5 8 5 2 9，第一遍之后，2会与5交换，那么原序列中两个5的顺序就被破坏了。所以不是稳定的排序算法

(3)插入排序：

插入排序是在一个已经有序的小序列的基础上，一次插入一个元素。刚开始这个小序列只包含第一个元素，事件复杂度O(n2)。比较是从这个小序列的末尾开始的。想要插入的元素和小序列的最大者开始比起，如果比它大则直接插在其后面，否则一直往前找它该插入的位置。如果遇见了一个和插入元素相等的，则把插入元素放在这个相等元素的后面。所以相等元素间的顺序没有改变，是稳定的。

(4)快速排序
    快速排序有两个方向，左边的i下标一直往右走，当a[i] <= a[center_index]，其中center_index是中枢元素的数组下标，一般取为数组第0个元素。而右边的j下标一直往左走，当a[j] > a[center_index]。如果i和j都走不动了，i <= j, 交换a[i]和a[j],重复上面的过程，直到i>j。 交换a[j]和a[center_index]，完成一趟快速排序。在中枢元素和a[j]交换的时候，很有可能把前面的元素的稳定性打乱，比如序列为 5 3 3 4 3 8 9 10 11， 现在中枢元素5和3(第5个元素，下标从1开始计)交换就会把元素3的稳定性打乱，所以快速排序是一个不稳定的排序算法，不稳定发生在中枢元素和a[j]交换的时刻。

(5)归并排序
    归并排序是把序列递归地分成短序列，递归出口是短序列只有1个元素(认为直接有序)或者2个序列(1次比较和交换),然后把各个有序的段序列合并成一个有序的长序列，不断合并直到原序列全部排好序。可以发现，在1个或2个元素时，1个元素不会交换，2个元素如果大小相等也没有人故意交换，这不会破坏稳定性。那么，在短的有序序列合并的过程中，稳定是是否受到破坏？没有，合并过程中我们可以保证如果两个当前元素相等时，我们把处在前面的序列的元素保存在结果序列的前面，这样就保证了稳定性。所以，归并排序也是稳定的排序算法。

(6)基数排序
   基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序，最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。基数排序基于分别排序，分别收集，所以其是稳定的排序算法。

(7)希尔排序(shell)
    希尔排序是按照不同步长对元素进行插入排序，当刚开始元素很无序的时候，步长最大，所以插入排序的元素个数很少，速度很快；当元素基本有序了，步长很小，插入排序对于有序的序列效率很高。所以，希尔排序的时间复杂度会比o(n^2)好一些。由于多次插入排序，我们知道一次插入排序是稳定的，不会改变相同元素的相对顺序，但在不同的插入排序过程中，相同的元素可能在各自的插入排序中移动，最后其稳定性就会被打乱，所以shell排序是不稳定的。

(8)堆排序
   我们知道堆的结构是节点i的孩子为2*i和2*i+1节点，大顶堆要求父节点大于等于其2个子节点，小顶堆要求父节点小于等于其2个子节点。在一个长为n的序列，堆排序的过程是从第n/2开始和其子节点共3个值选择最大(大顶堆)或者最小(小顶堆),这3个元素之间的选择当然不会破坏稳定性。但当为n/2-1, n/2-2, ...1这些个父节点选择元素时，就会破坏稳定性。有可能第n/2个父节点交换把后面一个元素交换过去了，而第n/2-1个父节点把后面一个相同的元素没有交换，那么这2个相同的元素之间的稳定性就被破坏了。所以，堆排序不是稳定的排序算法
*/


